<?xml version="1.0" encoding="UTF-8"?>
<class xmlns="http://xml.phpdox.net/src" full="LTDBeget\sphinxConfigurator\parser\SphinxConfigurationParser" namespace="LTDBeget\sphinxConfigurator\parser" name="SphinxConfigurationParser" abstract="false" final="true" start="17" end="616">
  <file path="/home/voksiv/projects/sphinx-configurator/src/LTDBeget/sphinxConfigurator/parser" file="SphinxConfigurationParser.php" realpath="/home/voksiv/projects/sphinx-configurator/src/LTDBeget/sphinxConfigurator/parser/SphinxConfigurationParser.php" size="14924" time="2016-03-17T01:59:23+00:00" unixtime="1458179963" sha1="7541fc2e4124a1b8515fe8628d930ded4cfd6475" relative="LTDBeget/sphinxConfigurator/parser/SphinxConfigurationParser.php"/>
  <docblock>
    <description compact="Class SphinxConfigurationParser"/>
    <package value="LTDBeget\sphinxConfigurator\parser"/>
  </docblock>
  <method name="parse" start="23" end="33" abstract="false" final="false" static="true" visibility="public">
    <docblock>
      <description/>
      <param type="string" variable="$plainData"/>
      <return type="array"/>
    </docblock>
    <parameter name="plainData" byreference="false" type="object">
      <type full="LTDBeget\sphinxConfigurator\parser\string" namespace="LTDBeget\sphinxConfigurator\parser" name="string"/>
    </parameter>
  </method>
  <method name="extractNodes" start="39" end="52" abstract="false" final="false" static="false" visibility="private">
    <docblock>
      <description compact="parsing of nodes in config (source, index, indexer, searchd, common)"/>
      <return type="object">
        <type full="LTDBeget\sphinxConfigurator\parser\SphinxConfigurationParser" namespace="LTDBeget\sphinxConfigurator\parser" name="SphinxConfigurationParser"/>
      </return>
    </docblock>
  </method>
  <method name="extractNode" start="58" end="80" abstract="false" final="false" static="false" visibility="private">
    <docblock>
      <description compact="parsing of node in config (source, index, indexer, searchd, common)"/>
      <throws type="object">
        <type full="LTDBeget\sphinxConfigurator\exceptions\SyntaxErrorException" namespace="LTDBeget\sphinxConfigurator\exceptions" name="SyntaxErrorException"/>
      </throws>
    </docblock>
  </method>
  <method name="extractNodeType" start="86" end="100" abstract="false" final="false" static="false" visibility="private">
    <docblock>
      <description compact="parsing type of node in config (source, index, indexer, searchd, common)"/>
      <throws type="object">
        <type full="LTDBeget\sphinxConfigurator\exceptions\SyntaxErrorException" namespace="LTDBeget\sphinxConfigurator\exceptions" name="SyntaxErrorException"/>
      </throws>
    </docblock>
  </method>
  <method name="extractNodeName" start="106" end="124" abstract="false" final="false" static="false" visibility="private">
    <docblock>
      <description compact="parsing name of source or index"/>
      <throws type="object">
        <type full="LTDBeget\sphinxConfigurator\exceptions\SyntaxErrorException" namespace="LTDBeget\sphinxConfigurator\exceptions" name="SyntaxErrorException"/>
      </throws>
    </docblock>
  </method>
  <method name="extractNodeInheritance" start="130" end="150" abstract="false" final="false" static="false" visibility="private">
    <docblock>
      <description compact="parsing inheritance of source or index if has"/>
      <throws type="object">
        <type full="LTDBeget\sphinxConfigurator\exceptions\SyntaxErrorException" namespace="LTDBeget\sphinxConfigurator\exceptions" name="SyntaxErrorException"/>
      </throws>
    </docblock>
  </method>
  <method name="extractOptions" start="156" end="174" abstract="false" final="false" static="false" visibility="private">
    <docblock>
      <description compact="parsing options of node"/>
      <throws type="object">
        <type full="LTDBeget\sphinxConfigurator\exceptions\SyntaxErrorException" namespace="LTDBeget\sphinxConfigurator\exceptions" name="SyntaxErrorException"/>
      </throws>
    </docblock>
  </method>
  <method name="extractOption" start="180" end="187" abstract="false" final="false" static="false" visibility="private">
    <docblock>
      <description compact="parsing concrete option"/>
      <throws type="object">
        <type full="LTDBeget\sphinxConfigurator\exceptions\SyntaxErrorException" namespace="LTDBeget\sphinxConfigurator\exceptions" name="SyntaxErrorException"/>
      </throws>
    </docblock>
  </method>
  <method name="extractOptionName" start="193" end="208" abstract="false" final="false" static="false" visibility="private">
    <docblock>
      <description compact="parsing concrete option name"/>
      <throws type="object">
        <type full="LTDBeget\sphinxConfigurator\exceptions\SyntaxErrorException" namespace="LTDBeget\sphinxConfigurator\exceptions" name="SyntaxErrorException"/>
      </throws>
    </docblock>
  </method>
  <method name="extractOptionValue" start="214" end="250" abstract="false" final="false" static="false" visibility="private">
    <docblock>
      <description compact="parsing concrete option value"/>
      <throws type="object">
        <type full="LTDBeget\sphinxConfigurator\exceptions\SyntaxErrorException" namespace="LTDBeget\sphinxConfigurator\exceptions" name="SyntaxErrorException"/>
      </throws>
    </docblock>
  </method>
  <method name="getInstance" start="255" end="262" abstract="false" final="false" static="true" visibility="private">
    <docblock>
      <description/>
      <return type="object">
        <type full="LTDBeget\sphinxConfigurator\parser\SphinxConfigurationParser" namespace="LTDBeget\sphinxConfigurator\parser" name="SphinxConfigurationParser"/>
      </return>
    </docblock>
  </method>
  <constructor name="__construct" start="264" end="264" abstract="false" final="false" static="false" visibility="private"/>
  <method name="__clone" start="265" end="265" abstract="false" final="false" static="false" visibility="private"/>
  <method name="saveCurrentNode" start="270" end="274" abstract="false" final="false" static="false" visibility="private">
    <docblock>
      <description compact="saves current parsed data from temporary storage to parsed data"/>
    </docblock>
  </method>
  <method name="getParsedData" start="279" end="282" abstract="false" final="false" static="false" visibility="private">
    <docblock>
      <description/>
      <return type="array"/>
    </docblock>
  </method>
  <method name="getEmptyNodeData" start="288" end="296" abstract="false" final="false" static="false" visibility="private">
    <docblock>
      <description compact="format of node"/>
      <return type="array"/>
    </docblock>
  </method>
  <method name="getEmptyOptionData" start="302" end="308" abstract="false" final="false" static="false" visibility="private">
    <docblock>
      <description compact="format of option"/>
      <return type="array"/>
    </docblock>
  </method>
  <method name="clear" start="314" end="321" abstract="false" final="false" static="false" visibility="private">
    <docblock>
      <description compact="clear parsed and plain data"/>
      <return type="object">
        <type full="LTDBeget\sphinxConfigurator\parser\SphinxConfigurationParser" namespace="LTDBeget\sphinxConfigurator\parser" name="SphinxConfigurationParser"/>
      </return>
    </docblock>
  </method>
  <method name="clearTemporaryStorage" start="327" end="333" abstract="false" final="false" static="false" visibility="private">
    <docblock>
      <description compact="clear temporary storage's of parsed data"/>
      <return type="object">
        <type full="LTDBeget\sphinxConfigurator\parser\SphinxConfigurationParser" namespace="LTDBeget\sphinxConfigurator\parser" name="SphinxConfigurationParser"/>
      </return>
    </docblock>
  </method>
  <method name="defineData" start="340" end="349" abstract="false" final="false" static="false" visibility="private">
    <docblock>
      <description compact="Split data on array of chars"/>
      <param type="object" variable="$data">
        <type full="LTDBeget\sphinxConfigurator\parser\String" namespace="LTDBeget\sphinxConfigurator\parser" name="String"/>
      </param>
      <return type="object">
        <type full="LTDBeget\sphinxConfigurator\parser\SphinxConfigurationParser" namespace="LTDBeget\sphinxConfigurator\parser" name="SphinxConfigurationParser"/>
      </return>
    </docblock>
    <parameter name="data" byreference="false" type="object">
      <type full="LTDBeget\sphinxConfigurator\parser\string" namespace="LTDBeget\sphinxConfigurator\parser" name="string"/>
    </parameter>
  </method>
  <method name="removeComments" start="355" end="360" abstract="false" final="false" static="false" visibility="private">
    <docblock>
      <description compact="remove all comments from configuration"/>
      <return type="object">
        <type full="LTDBeget\sphinxConfigurator\parser\SphinxConfigurationParser" namespace="LTDBeget\sphinxConfigurator\parser" name="SphinxConfigurationParser"/>
      </return>
    </docblock>
  </method>
  <method name="splitData" start="366" end="371" abstract="false" final="false" static="false" visibility="private">
    <docblock>
      <description compact="split plain data to array of ords"/>
      <return type="object">
        <type full="LTDBeget\sphinxConfigurator\parser\SphinxConfigurationParser" namespace="LTDBeget\sphinxConfigurator\parser" name="SphinxConfigurationParser"/>
      </return>
    </docblock>
  </method>
  <method name="throwSyntaxErrorException" start="373" end="382" abstract="false" final="false" static="false" visibility="private"/>
  <method name="getParseErrorLineNumber" start="387" end="400" abstract="false" final="false" static="false" visibility="private">
    <docblock>
      <description/>
      <return type="int"/>
    </docblock>
  </method>
  <method name="ignoreSpaceAndEndLine" start="405" end="414" abstract="false" final="false" static="false" visibility="private">
    <docblock>
      <description compact="ignore all spaces and ends line"/>
    </docblock>
  </method>
  <method name="ignoreSpace" start="419" end="428" abstract="false" final="false" static="false" visibility="private">
    <docblock>
      <description compact="ignore all spaces in line"/>
    </docblock>
  </method>
  <method name="isMeanSymbol" start="436" end="439" abstract="false" final="false" static="false" visibility="private">
    <docblock>
      <description compact="for understanding see link"/>
      <link value="http://www.asciitable.com/"/>
      <param type="int" variable="$ord"/>
      <return type="object">
        <type full="LTDBeget\sphinxConfigurator\parser\bool" namespace="LTDBeget\sphinxConfigurator\parser" name="bool"/>
      </return>
    </docblock>
    <parameter name="ord" byreference="false" type="object">
      <type full="LTDBeget\sphinxConfigurator\parser\int" namespace="LTDBeget\sphinxConfigurator\parser" name="int"/>
    </parameter>
  </method>
  <method name="isSpace" start="447" end="450" abstract="false" final="false" static="false" visibility="private">
    <docblock>
      <description compact="for understanding see link"/>
      <link value="http://www.asciitable.com/"/>
      <param type="int" variable="$ord"/>
      <return type="object">
        <type full="LTDBeget\sphinxConfigurator\parser\bool" namespace="LTDBeget\sphinxConfigurator\parser" name="bool"/>
      </return>
    </docblock>
    <parameter name="ord" byreference="false" type="object">
      <type full="LTDBeget\sphinxConfigurator\parser\int" namespace="LTDBeget\sphinxConfigurator\parser" name="int"/>
    </parameter>
  </method>
  <method name="isTabulation" start="458" end="461" abstract="false" final="false" static="false" visibility="private">
    <docblock>
      <description compact="for understanding see link"/>
      <link value="http://www.asciitable.com/"/>
      <param type="int" variable="$ord"/>
      <return type="object">
        <type full="LTDBeget\sphinxConfigurator\parser\bool" namespace="LTDBeget\sphinxConfigurator\parser" name="bool"/>
      </return>
    </docblock>
    <parameter name="ord" byreference="false" type="object">
      <type full="LTDBeget\sphinxConfigurator\parser\int" namespace="LTDBeget\sphinxConfigurator\parser" name="int"/>
    </parameter>
  </method>
  <method name="isEndLine" start="469" end="472" abstract="false" final="false" static="false" visibility="private">
    <docblock>
      <description compact="for understanding see link"/>
      <link value="http://www.asciitable.com/"/>
      <param type="int" variable="$ord"/>
      <return type="object">
        <type full="LTDBeget\sphinxConfigurator\parser\bool" namespace="LTDBeget\sphinxConfigurator\parser" name="bool"/>
      </return>
    </docblock>
    <parameter name="ord" byreference="false" type="object">
      <type full="LTDBeget\sphinxConfigurator\parser\int" namespace="LTDBeget\sphinxConfigurator\parser" name="int"/>
    </parameter>
  </method>
  <method name="isEndFile" start="480" end="483" abstract="false" final="false" static="false" visibility="private">
    <docblock>
      <description compact="for understanding see link"/>
      <link value="http://www.asciitable.com/"/>
      <param type="int" variable="$ord"/>
      <return type="object">
        <type full="LTDBeget\sphinxConfigurator\parser\bool" namespace="LTDBeget\sphinxConfigurator\parser" name="bool"/>
      </return>
    </docblock>
    <parameter name="ord" byreference="false" type="object">
      <type full="LTDBeget\sphinxConfigurator\parser\int" namespace="LTDBeget\sphinxConfigurator\parser" name="int"/>
    </parameter>
  </method>
  <method name="isDigit" start="491" end="494" abstract="false" final="false" static="false" visibility="private">
    <docblock>
      <description compact="for understanding see link"/>
      <link value="http://www.asciitable.com/"/>
      <param type="int" variable="$ord"/>
      <return type="object">
        <type full="LTDBeget\sphinxConfigurator\parser\bool" namespace="LTDBeget\sphinxConfigurator\parser" name="bool"/>
      </return>
    </docblock>
    <parameter name="ord" byreference="false" type="object">
      <type full="LTDBeget\sphinxConfigurator\parser\int" namespace="LTDBeget\sphinxConfigurator\parser" name="int"/>
    </parameter>
  </method>
  <method name="isLetter" start="502" end="505" abstract="false" final="false" static="false" visibility="private">
    <docblock>
      <description compact="for understanding see link"/>
      <link value="http://www.asciitable.com/"/>
      <param type="int" variable="$ord"/>
      <return type="object">
        <type full="LTDBeget\sphinxConfigurator\parser\bool" namespace="LTDBeget\sphinxConfigurator\parser" name="bool"/>
      </return>
    </docblock>
    <parameter name="ord" byreference="false" type="object">
      <type full="LTDBeget\sphinxConfigurator\parser\int" namespace="LTDBeget\sphinxConfigurator\parser" name="int"/>
    </parameter>
  </method>
  <method name="isColon" start="513" end="516" abstract="false" final="false" static="false" visibility="private">
    <docblock>
      <description compact="for understanding see link"/>
      <link value="http://www.asciitable.com/"/>
      <param type="int" variable="$ord"/>
      <return type="object">
        <type full="LTDBeget\sphinxConfigurator\parser\bool" namespace="LTDBeget\sphinxConfigurator\parser" name="bool"/>
      </return>
    </docblock>
    <parameter name="ord" byreference="false" type="object">
      <type full="LTDBeget\sphinxConfigurator\parser\int" namespace="LTDBeget\sphinxConfigurator\parser" name="int"/>
    </parameter>
  </method>
  <method name="isOpenBrace" start="524" end="527" abstract="false" final="false" static="false" visibility="private">
    <docblock>
      <description compact="for understanding see link"/>
      <link value="http://www.asciitable.com/"/>
      <param type="int" variable="$ord"/>
      <return type="object">
        <type full="LTDBeget\sphinxConfigurator\parser\bool" namespace="LTDBeget\sphinxConfigurator\parser" name="bool"/>
      </return>
    </docblock>
    <parameter name="ord" byreference="false" type="object">
      <type full="LTDBeget\sphinxConfigurator\parser\int" namespace="LTDBeget\sphinxConfigurator\parser" name="int"/>
    </parameter>
  </method>
  <method name="isCloseBrace" start="535" end="538" abstract="false" final="false" static="false" visibility="private">
    <docblock>
      <description compact="for understanding see link"/>
      <link value="http://www.asciitable.com/"/>
      <param type="int" variable="$ord"/>
      <return type="object">
        <type full="LTDBeget\sphinxConfigurator\parser\bool" namespace="LTDBeget\sphinxConfigurator\parser" name="bool"/>
      </return>
    </docblock>
    <parameter name="ord" byreference="false" type="object">
      <type full="LTDBeget\sphinxConfigurator\parser\int" namespace="LTDBeget\sphinxConfigurator\parser" name="int"/>
    </parameter>
  </method>
  <method name="isUnderscore" start="546" end="549" abstract="false" final="false" static="false" visibility="private">
    <docblock>
      <description compact="for understanding see link"/>
      <link value="http://www.asciitable.com/"/>
      <param type="int" variable="$ord"/>
      <return type="object">
        <type full="LTDBeget\sphinxConfigurator\parser\bool" namespace="LTDBeget\sphinxConfigurator\parser" name="bool"/>
      </return>
    </docblock>
    <parameter name="ord" byreference="false" type="object">
      <type full="LTDBeget\sphinxConfigurator\parser\int" namespace="LTDBeget\sphinxConfigurator\parser" name="int"/>
    </parameter>
  </method>
  <method name="isEqualSign" start="557" end="560" abstract="false" final="false" static="false" visibility="private">
    <docblock>
      <description compact="for understanding see link"/>
      <link value="http://www.asciitable.com/"/>
      <param type="int" variable="$ord"/>
      <return type="object">
        <type full="LTDBeget\sphinxConfigurator\parser\bool" namespace="LTDBeget\sphinxConfigurator\parser" name="bool"/>
      </return>
    </docblock>
    <parameter name="ord" byreference="false" type="object">
      <type full="LTDBeget\sphinxConfigurator\parser\int" namespace="LTDBeget\sphinxConfigurator\parser" name="int"/>
    </parameter>
  </method>
  <method name="isBackslash" start="568" end="571" abstract="false" final="false" static="false" visibility="private">
    <docblock>
      <description compact="for understanding see link"/>
      <link value="http://www.asciitable.com/"/>
      <param type="int" variable="$ord"/>
      <return type="object">
        <type full="LTDBeget\sphinxConfigurator\parser\bool" namespace="LTDBeget\sphinxConfigurator\parser" name="bool"/>
      </return>
    </docblock>
    <parameter name="ord" byreference="false" type="object">
      <type full="LTDBeget\sphinxConfigurator\parser\int" namespace="LTDBeget\sphinxConfigurator\parser" name="int"/>
    </parameter>
  </method>
  <member name="instance" type="{unknown}" default="" constant="null" visibility="private" static="true" line="576">
    <docblock>
      <description/>
      <var type="object">
        <type full="LTDBeget\sphinxConfigurator\parser\SphinxConfigurationParser" namespace="LTDBeget\sphinxConfigurator\parser" name="SphinxConfigurationParser"/>
      </var>
    </docblock>
  </member>
  <member name="originalData" visibility="private" static="false" line="583">
    <docblock>
      <description compact="config data as it is"/>
      <var type="string"/>
    </docblock>
  </member>
  <member name="data" type="{unknown}" default="" constant="null" visibility="private" static="false" line="589">
    <docblock>
      <description compact="Spited by chars plain string"/>
      <var type="array"/>
    </docblock>
  </member>
  <member name="parsedData" type="array" default="" visibility="private" static="false" line="595">
    <docblock>
      <description compact="Storage of parsed result as array"/>
      <var type="array"/>
    </docblock>
  </member>
  <member name="currentNode" type="array" default="" visibility="private" static="false" line="601">
    <docblock>
      <description compact="temporary storage of parsed data for one options block"/>
      <var type="array"/>
    </docblock>
  </member>
  <member name="currentOption" type="array" default="" visibility="private" static="false" line="612">
    <docblock>
      <description compact="temporary storage of parsed data for one option"/>
      <var type="array"/>
    </docblock>
  </member>
</class>
